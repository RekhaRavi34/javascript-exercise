/////////////////Exercise: Practicing with functions//////////////////////

Your task in this exercise is to code a function which will be able to take a word and locate the position of a chosen letter in that given word.  

----Task 1:
Write a function named letterFinder that accepts two parameters: word and match.

-----Task 2:
Code a 'for' loop inside the function's body. The for loop's counter should start at zero, increment by 1 on each iteration and exit when the counter variable's value is equal to the length of the word parameter.

--------Task 3:
Add an if statement inside the for loop whose condition works as follows:

 Access each of the letters inside the passed in word using the counter variable, with word[i]. 

Check if the current word[i] is equal to the value of match.

------Task 4:
console.log the following inside the body of the if statement: console.log('Found the', match, 'at', i).

----------Task 5:
Write the else condition. Here you'll just console log the following: console.log('---No match found at', i).

--------Task 6:
Call the letterFinder and pass it as its first argument as the string "test" and as its second argument, the string "t".

Your output should be the following:

Found the t at 0

---No match found at 1

---No match found at 2

Found the t at 3

solution: 

function letterFinder(word, match){
    for(var i = 0;  i < word.length ; i++){
        if(word[i]==match){
            console.log('Found the', match, 'at', i);
        }
        else{
            console.log('---No match found at', i)
        }
    }
}
letterFinder("test","t")

////////Exercise: Creating arrays and objects/////////////

In this exercise lab you will practice creating arrays and objects.

----------------Tasks to complete-----------------

Create a new empty array literal and assign it to the variable clothes.

Add 5 of your favorite items of clothing as strings using the push() method.

Remove the fifth piece of clothing from the array using the pop() method.

Add a new piece of clothing using the push() method.

Use console.log to show the third item from the clothes array in the console.

Create a new empty object literal and assign it to the variable favCar.

Using the dot notation, assign a color property to the favCar object and give it a string value with the color of your choice.

Using the dot notation, assign a covertible property to the favCar object and give it a boolean value of your choice.

Use the console to log the entire favCar object.

solution:

var clothes = [];
clothes.push('jeans1'); //push
clothes.push('jeans2');
clothes.push('jeans3');
clothes.push('jeans4');
clothes.push('jeans5');
clothes.pop();          // pop
console.log(clothes[2]);// display 3rd item

var favCar = {}
favCar.color = "red";
favCar.covertible=true;
console.log(favCar); // display entire obj

exercise: 
Below the // number 1 comment are a number of strings, each one containing a product name and price separated by a colon. We'd like you to turn this into an array and store it in an array called products.
Below the // number 2 comment, start a for...of() loop to go through every item in the products array.
Below the // number 3 comment we want you to write a line of code that splits the current array item (name:price) into two separate items, one containing just the name and one containing just the price. If you are not sure how to do this, consult the Useful string methods article for some help, or even better, look at the Converting between strings and arrays section of this article.
As part of the above line of code, you'll also want to convert the price from a string to a number. If you can't remember how to do this, check out the first strings article.
There is a variable called total that is created and given a value of 0 at the top of the code. Inside the loop (below // number 4) we want you to add a line that adds the current item price to that total in each iteration of the loop, so that at the end of the code the correct total is printed onto the invoice. You might need an assignment operator to do this.
We want you to change the line just below // number 5 so that the itemText variable is made equal to "current item name — $current item price", for example "Shoes — $23.99" in each case, so the correct information for each item is printed on the invoice. This is just simple string concatenation, which should be familiar to you.
Finally, below the // number 6 comment, you'll need to add a } to mark the end of the for...of() loop.

const list = document.querySelector('.output ul');
const totalBox = document.querySelector('.output p');
let total = 0;
list.innerHTML = '';
totalBox.textContent = '';

var products =['Underpants:6.99',
                'Socks:5.99',
                'T-shirt:14.99',
                'Trousers:31.99',
                'Shoes:23.99'];


for ( let x of products){
let y = x.split(':');
for (let z of y){
}
}



  // number 4

  // number 5
  let itemText = 0;

  const listItem = document.createElement('li');
  listItem.textContent = itemText;
  list.appendChild(listItem);

// number 6

totalBox.textContent = 'Total: $' + total.toFixed(2);

const list = document.querySelector('.output ul');
const totalBox = document.querySelector('.output p');
let total = 0;
list.innerHTML = '';
totalBox.textContent = '';

const products = [
  'Underpants:6.99',
  'Socks:5.99',
  'T-shirt:14.99',
  'Trousers:31.99',
  'Shoes:23.99',
];

for (const product of products) {
  const subArray = product.split(':');
  const name = subArray[0];
  const price = Number(subArray[1]);
  total += price;
  const itemText = `${name} — $${price}`;

  const listItem = document.createElement('li');
  listItem.textContent = itemText;
  list.appendChild(listItem);
}

totalBox.textContent = `Total: $${total.toFixed(2)}`;

or

for (let product of products) {
  // number 3
  let [name, price] = product.split(':');
  price = parseFloat(price); // Convert price to a number

  // number 4
  total += price;

  // number 5
  let itemText = name + ' — $' + price.toFixed(2);

  const listItem = document.createElement('li');
  listItem.textContent = itemText;
  list.appendChild(listItem);
}

